[package]
name = "scale-decode"
documentation = "https://docs.rs/scale-decode"
description = "Decode SCALE encoded bytes into arbitrary types at runtime"
readme = "README.md"

version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
include.workspace = true

[features]
default = ["std", "derive", "primitive-types"]

# Activates std feature.
std = ["scale-info/std"]

# Impls for primitive-types.
primitive-types = ["dep:primitive-types"]

# Enable the `DecodeAsType` macro.
derive = ["dep:scale-decode-derive"]

[dependencies]
scale-info = { version = "2.7.0", default-features = false, features = ["bit-vec"] }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
scale-bits = { version = "0.4.0", default-features = false, features = ["scale-info"] }
scale-decode-derive = { workspace = true, optional = true }
primitive-types = { version = "0.12.0", optional = true, default-features = false }
smallvec = "1.10.0"

[dev-dependencies]
scale-info = { version = "2.7.0", default-features = false, features = ["bit-vec", "derive"] }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive", "bit-vec"] }
bitvec = { version = "1.0.1", default-features = false }
trybuild = "1.0.72"
# Enable the scale-info feature for testing.
primitive-types = { version = "0.12.0", default-features = false, features = ["scale-info"] }
